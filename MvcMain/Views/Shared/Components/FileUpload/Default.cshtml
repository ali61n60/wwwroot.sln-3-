@model object
<p>File Uploader in progress</p>
<div class="row well">
    <div class="col-sm-4 col-sm-push-8 text-right">
        <label>ارسال عکس</label>

        <br />
        <input id="imageUpload" type="file" name="imageUpload" class="btn btn-info btn-block" />
        <button id="imageUploadButton" type="button">ارسال عکس</button>
        <br />
        <div id="labelUploadResult"></div>
        <br />
    </div>
    <div class="col-sm-8 col-sm-pull-4 col-sm-push-0">
        <div id="loadedImageView" class="row"></div>
    </div>
</div>

<script id="sendingImageTemplate" type="text/template">
    <div class='col-sm-6' style='border: 2px solid blue; margin:5px'>
        <p dir='rtl'>در حال ارسال فایل</p>
        <img src="/Resources/Images/loader.gif" width="50px" height="50px" />
    </div>
</script>

<script id="addedImage" type="text/template">
    <div id="{{imageId}}" class='col-sm-2 addedImage'>
        <img class='img-rounded img-responsive' src="{{imageSrc}}" />
        <input type='button' class='btn btn-primary btn-block' value='حذف' />
        @*$button.on("click", { imageId: divId }, removeImageFromSession);*@
    </div>

</script>


<script>
    $(document).ready(function () {
        //$("#FileUpload1").change(uploadImage); //set event handler for change event on file upload element
        $("#imageUploadButton").click(function (evt) {
            var fileUpload = $("#imageUpload").get(0);
            var files = fileUpload.files;
            var data = new FormData();
            for (var i = 0; i < files.length; i++) {
                data.append(files[i].name, files[i]);
            }//for
            $.ajax({
                type: "POST",
                url: "/api/AdApi/UploadFile",
                contentType: false,
                processData: false,
                data: data,
                success: uploadImageSuccess,
                error: uploadImageError
            });//ajax
            showSendingImage();
        });//click

        $(".addedImage > input").on("click",function (event) {
               // var message = $('this').parent().attr("id");
                alert("click");
            });//on
    });//ready

    function uploadImageSuccess(msg) {
        hideSendingImage();
        $("#imageUpload").val("");
        //TODO check for data.success parameter
        if (msg.success==true) {
            addNewImageToPage(msg.responseData);
        }//if
        else {
            //todo show error message
        }//else

    }//uploadImageSuccess

    function uploadImageError() {
        hideSendingImage();
    }

    function showSendingImage() {
        var $sendingImageTemplate = $("#sendingImageTemplate").clone();
        $("#labelUploadResult").html($sendingImageTemplate.html());
    }//showSendingImage

    function hideSendingImage() {
        $("#labelUploadResult").html("");

    }//hideSendingImage

    function addNewImageToPage(data) {
        //TODO create a copy of newImage template and add it to page
        var responseImage = "data:image/jpg;base64," + data.image;
        var template = $('#addedImage').html();

        templateData = {
            imageId: data.imageFileName,
            imageSrc: responseImage
        } //data

        var html = Mustache.to_html(template, templateData);

        $("#loadedImageView").append(html);
    }//addNewImageToPage

    function serverResult(msg) {
        $("#labelUploadResult").html(msg);
    }//serverResult

    

    function removeImageFromSession(event) {
        var form_data = new FormData();                  // Creating object of FormData class
        form_data.append("method", "deleteImage");               // Adding extra parameters to form_data
        form_data.append("imageId", event.data.imageId);
        reportMessageToUser("در حال حذف فایل");
        $.ajax({//C# Method call
            type: 'POST',
            processData: false, // important
            contentType: false, // important
            data: form_data,
            async: true,
            url: "<%= Page.ResolveClientUrl(imageWebUserControlHandlerAddress) %>",
            success: function (msg) {
                var jsonMessage = JSON.parse(msg);
                reportMessageToUser(jsonMessage.message);
                $(event.target).parent().remove();
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                reportMessageToUser(textStatus + "  ," + errorThrown);
            }
        });//end $.ajax C# call
    }//end removeImageFromSession





    function reportMessageToUser(message) {
        $newMessage = $("<span style=\"color:red\">" + message + "</span><br />");
        $newMessage.hide();
        $("#labelUploadResult").children().remove();
        $("#labelUploadResult").append($newMessage);
        $newMessage.show().delay(2000).hide(1000);
    }//end reportMessageToUser

</script>
