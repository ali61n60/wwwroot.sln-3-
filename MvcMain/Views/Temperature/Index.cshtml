@using ModelStd.Db.Ad
@model List<ModelStd.Db.Ad.TemperatureModel>

@{
    ViewData["Title"] = "دماسنج";
    ViewData["PageTitle"] = "دماسنج";
    Layout = "_Layout";
}

@section TopTop
    {
    @Html.Partial("TopTop")
}
@section NavBar
    {
    @Html.Partial("NavBar")
}
@section PageTitle
    {
    @Html.Partial("PageTitle")
}
@section TopHeader
    {

}
@section SideNav
    {
    @Html.Partial("SideNav")
}
@section Body
    {
    <form asp-controller="Temperature" asp-action="CustomResult" method="post">
        <div>
            <span>انتخاب تعداد رکورد</span>
            <select id="numberOfItems" name="numberOfItems" class="form-control">
                <option value="50">50</option>
                <option value="100">100</option>
                <option value="100">150</option>
                <option value="100">200</option>
                <option value="100">250</option>
                <option value="100">300</option>
                <option value="1000000">all</option>
            </select>
            <button id="newNumberOfItems" class="btn btn-lg btn-primary">ارسال</button>
        </div>

    </form>
    <br /><br />

    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Date</th>
                <th>Temperature</th>
            </tr>
        </thead>
        @foreach (TemperatureModel temperature in Model)
        {
            <tr>
                <td>@temperature.TemperatureId</td>
                <td>@temperature.InsertDateTime</td>
                <td>@temperature.Temp</td>
            </tr>
        }
    </table>
    <div id="chartContainer" style="height: 370px; width: 100%;"></div>

}

@section Footer
    {
    @Html.Partial("Footer")
}

@section scripts{
    <script>
        window.onload = function () {

            //Better to construct options first and then pass it as a parameter
            var options = {
                title: {
                    text: "Spline Chart with Export as Image"
                },
                animationEnabled: true,
                exportEnabled: true,
                data: [
                    {
                        type: "spline", //change it to line, area, column, pie, etc
                        dataPoints: [
                            { x: 10, y: 10 },
                            { x: 20, y: 12 },
                            { x: 30, y: 8 },
                            { x: 40, y: 14 },
                            { x: 50, y: 6 },
                            { x: 60, y: 24 },
                            { x: 70, y: -4 },
                            { x: 80, y: 10 }
                        ]
                    }
                ]
            };
            $("#chartContainer").CanvasJSChart(options);

        }
    </script>


    <script src="https://canvasjs.com/assets/script/jquery-1.11.1.min.js"></script>
    <script src="https://canvasjs.com/assets/script/jquery.canvasjs.min.js"></script>
}