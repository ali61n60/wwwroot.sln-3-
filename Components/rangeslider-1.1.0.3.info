{"Name":"Range Slider","Id":2401,"Alias":"rangeslider","Description":"`RangeSlider` is a slider control with two handles, allowing users to\nspecify two values in a range.  `RangeSlider` supports iOS and Android,\nand is styled to look like a native slider control on each platform.\n\n### Adding a RangeSliderView to your iOS app\n\n```csharp\nusing RangeSlider;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();  \n\n  var slider = new RangeSliderView {\n    Frame = new RectangleF (50, View.Center.Y - 140, View.Frame.Width - 100, 40))\n  };\n\n  slider.LeftValueChanged += value =\u003e Console.WriteLine (\"Left value: {0}\", value);\n  slider.RightValueChanged += value =\u003e Console.WriteLine (\"Right value: {0}\", value);\n\n  View.AddSubview (slider);\n}\n```\n\n### Adding a RangeSliderView to your Android app\n\n```csharp\nusing RangeSlider;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n  \n  var slider = new RangeSliderView (this);\n  slider.LeftValueChanged += value =\u003e {\n    Console.WriteLine (\"Left value: {0}\", value);\n  };\n\n  AddContentView (slider, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n\nTo get slider values use `LeftValue` and `RightValue`:\n\n```csharp\nvar lowBound = slider.LeftValue;\nvar highBound = slider.RightValue;\n```\n","Version":"1.1.0.3","Summary":"A slider control with two handles, allowing users to specify two values in a range.","QuickStart":"`RangeSlider` is a slider control with two handles, allowing users to\nspecify two values in a range.  `RangeSlider` supports iOS and Android,\nand is styled to look like a native slider control on each platform.\n\n## Examples\n\n### Adding a RangeSliderView to your iOS app\n\n```csharp\nusing RangeSlider;\nusing System.Drawing;\n...\n\npublic override void ViewDidLoad ()\n{\n  base.ViewDidLoad ();\n\n  var slider = new RangeSliderView {\n    Frame = new RectangleF (50, View.Center.Y - 140, View.Frame.Width - 100, 40)\n  };\n\n  View.AddSubview (slider);\n}\n```\n\n### Adding a RangeSliderView to your Android app\n\n```csharp\nusing RangeSlider;\n...\n\nprotected override void OnCreate (Bundle bundle)\n{\n  base.OnCreate (bundle);\n\n  var slider = new RangeSliderView (this);\n  AddContentView (slider, new ViewGroup.LayoutParams (\n    ViewGroup.LayoutParams.FillParent, ViewGroup.LayoutParams.FillParent));\n}\n```\n \n### Getting slider values\n\n```csharp\nvar lowBound = slider.LeftValue;\nvar highBound = slider.RightValue;\n```\n\n### Setting slider values\n\n```csharp\nslider.LeftValue = initLowBound;\nslider.RightValue = initHighBound;\n```\n\n### Receiving change events\n\n```csharp\nslider.LeftValueChanged += value =\u003e {\n  Console.WriteLine (\"Left value: {0}\", value);\n};\n\nslider.RightValueChanged += value =\u003e {\n  Console.WriteLine (\"Right value: {0}\", value);\n};\n```\n\n### Adding a RangeSlider to an AXML Layout:\n\n```xml\n\u003cLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n  android:orientation=\"vertical\" android:layout_width=\"fill_parent\" android:layout_height=\"fill_parent\"\u003e\n  \u003crangeslider.RangeSliderView\n    android:id=\"@+id/rangeSlider\"\n    android:layout_width=\"fill_parent\"\n    android:layout_height=\"wrap_content\"\n    min_value=\"0\"\n    max_value=\"100\"\n    left_value=\"20\"\n    right_value=\"80\"/\u003e\n\u003c/LinearLayout\u003e\n```\n","Hash":"07efb503f167c53152521a7db345efc0","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}